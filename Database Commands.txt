//to add generals:
db.players.updateOne(
{username:"probando"},
{$addToSet:{ownedGenerals:{$each:["Voldemort"]}}}
);

//to replace everyones general to another one.
db.players.updateMany(
    { "ownedGenerals": "Paladin" }, // Filter: matches documents where 'ownedGenerals' includes 'Paladin'
    { "$set": { "ownedGenerals.$[element]": "Barbarian" } }, // Update: replaces 'GW' with 'NewGeneral'
    { "arrayFilters": [{ "element": "Paladin" }] } // ArrayFilters: specifies the condition for array elements to update
);


//to add a general to everyone
  db.players.updateMany(
        {}, // Filter (empty means "match all documents")
        { $addToSet: { ownedGenerals: newGeneral } }, // Update (addToSet avoids duplicates)
        { new: true } // Options
    )

// To remove a general from everyone
db.players.updateMany(
    {}, // Filter (empty means "match all documents")
    { $pull: { ownedGenerals: "Voldemort" } }, // Update (pull removes all occurrences of the value)
    { new: true } // Options
)




//To update something like rating:
db.players.updateOne(
{username:"probando"},
{$set:{rating:1400}}
);


//To update all rating:
db.players.updateMany({},
{$set:{rating:1200}}
);


//To decrease rating by 25 if its 1400 or highers
db.players.updateMany(
            { rating: { $gte: 1225 } },  // Condition: rating is 1400 or more          
  { $inc: { rating: -25 } }   // Action: decrement rating by 25
        )


//to increase by 25 if rating is 1175 or less

db.players.updateMany(
            { rating: { $lte: 1175 } },  // Condition: rating is 1175 or less
            { $inc: { rating: 25 } }     // Action: increment rating by 25
        );



to restart players in data base:
db.players.deleteMany({})





